File Menu Refactor:
	Methods to Move Over:
		- cmd_root_new @done(13-01-05)
		- cmd_root_delete @done(13-01-05)
		- cmd_external_edit @done(13-01-05)
		- cmd_sync_full @done(13-01-05)
		- cmd_sync_current_note @done(13-01-05)
		- cmd_markdown @done(13-01-05)
		- cmd_rest @done(13-01-05)
		- handler_close @done(13-01-05)
		This is kind of ugly, I assume that self.root has the handler_close method.

	Other Items:
		- Need to deal with continuous_rendering attribute @done(13-01-05)
		Places where the get_continuous_rendering method are used
			nv.py: if self.view.get_continuous_rendering()
			view.py:    def get_continuous_rendering(self)
		The solution is to put get_continuous_rendering into NvFileMenu. This is an ugly solution. But this is a step forward in refactoring the code. First get the simple refactor working.


	Additional Cleanup:
		- Is there a better way to handle handler_close (see note above)

Edit Menu Refactor:
	Methods to Move Over:
		- cmd_cut @done(13-01-06)
		- cmd_copy @done(13-01-06)
		- cmd_paste @done(13-01-06)
		- cmd_select_all @done(13-01-06)

Tools Menu Refactor:
	Methods to move over:
		- word_count @done(13-01-06)
	- Remove commented out code @done(13-01-06)

Help Menu Refactor:
	- Need root passed into __init__ @done(13-01-09)
	- Need config passed into __init__ @done(13-01-09)
	Methods to move over:
		- cmd_help_bindings @done(13-01-09)
		- cmd_help_about @done(13-01-09)
	- Remove commented out code @done(13-01-09)

Text Editor Refactor:
	Move methods using text_note:
		- clear_note_ui
			Depends on
				self.statusbar
				self.mute_note_data_changes

		- handler_search_enter
			Depends on
				self.notes_list
				self.notify_observers

		- set_note_data
			Depends on
				self.tags_entry_var
				self.pinned_checkbutton_var

		- update_selected_note_data
			Depends on
				self.mute_note_data_changes
				self.get_text()

		- Do not move
			- activate_search_string_highlights
			- activate_links



